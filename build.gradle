buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:${springIoDependencyVersion}"

    }
}

plugins {
    id "idea"
    id "java"
    id "java-library"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

def springProjects = [project(":horl-core"), project(":horl-client")]
def deployProjects = [project(":horl-client")]
def querydslProjects = [project(":horl-core")]

configure(allprojects.findAll()) {

    apply plugin: "java"
    apply plugin: "idea"
    apply plugin: "java-library"

    repositories {
        mavenCentral()
    }

    dependencies {
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
        testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    }

    test {
        useJUnitPlatform()
    }
}

configure(springProjects) {

    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"

    repositories {
        mavenCentral()
    }

    dependencies {

    }
}


def querydslDir = "$buildDir/generated/querydsl"

configure(querydslProjects) {

    apply plugin: "com.ewerk.gradle.plugins.querydsl"

    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java', querydslDir]
            }
        }
    }

    dependencies {
        api("com.querydsl:querydsl-jpa")
        api("com.querydsl:querydsl-apt")
    }

    querydsl {
        library = "com.querydsl:querydsl-apt"
        jpa = true
        querydslSourcesDir = querydslDir
    }

    compileQuerydsl {
        options.annotationProcessorPath = configurations.querydsl
    }

    configurations {
        querydsl.extendsFrom compileClasspath
    }
}

configure(deployProjects) {

    group = "${projectGroup}"
    version = "${projectVersion}"
    sourceCompatibility = 11
    targetCompatibility = 11

    springBoot {
        buildInfo {
            properties {
                additional = ['version': "${projectVersion}"]
            }
        }
    }

}